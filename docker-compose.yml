version: "3.8"

services:
  frontend:
    build:
      context: ./job-dashboard-client
      dockerfile: Dockerfile
    container_name: job-dashboard-frontend
    ports:
      - "3000:80"  
    depends_on:
      - auth-service
      - user-service
      - db
      - redis
    environment:
      - NODE_ENV=development

  db:
    image: postgres:15
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d

  redis:
    image: redis:7
    container_name: redis
    restart: always
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    # Do NOT expose port for dev internal use only
    # ports:
    #   - "6379:6379"

  auth-service:
    build: ./services/auth-service
    ports:
      - "4000:4000"
    env_file:
      - ./services/auth-service/.env
    depends_on:
      - db
      - redis

  user-service:
    build: ./services/user-service
    ports:
      - "4001:4001"
    env_file:
      - ./services/user-service/.env
    depends_on:
      - db
      - redis

  company-service:
    build: ./services/company-service
    ports:
      - "4002:4002"
    env_file:
      - ./services/company-service/.env
    depends_on:
      - db
      - redis

  job-service:
    build: ./services/job-service
    ports:
      - "4003:4003"
    env_file:
      - ./services/job-service/.env
    depends_on:
      - db
      - redis

  application-service:
    build: ./services/application-service
    ports:
      - "4004:4004"
    env_file:
      - ./services/application-service/.env
    depends_on:
      - db
      - redis

  notification-service:
    build: ./services/notification-service
    ports:
      - "4005:4005"
    env_file:
      - ./services/notification-service/.env
    depends_on:
      - db
      - redis

  ai-service:
    build: ./services/ai-assistant-service
    ports:
      - "4006:4006"
    env_file:
      - ./services/ai-assistant-service/.env
    depends_on:
      - db
      - redis

  promtail:
    image: grafana/promtail:2.9.1 
    container_name: promtail
    restart: always
    volumes:
      - ./promtail-config.yml:/etc/promtail/promtail.yml
      - ./promtail-positions:/tmp
      - /var/run/docker.sock:/var/run/docker.sock
    command: -config.file=/etc/promtail/promtail.yml -config.expand-env=true
    env_file:
    - .env.dev
    environment:
      - LOKI_ENDPOINT=${LOKI_ENDPOINT}
      - LOKI_USERNAME=${LOKI_USERNAME}
      - LOKI_API_KEY=${LOKI_API_KEY}
      - ENVIRONMENT=${ENVIRONMENT}

volumes:
  pgdata: